openapi: 3.0.3
info:
  title: User Authentication API
  version: "1.0.0"
  description: |
    Critical user authentication service experiencing breaking changes and security issues.
    This API demonstrates various failure scenarios including authentication failures,
    performance degradation, and breaking schema changes.
  contact:
    name: Security Team
    email: security@company.com
  x-api-status: critical
  x-health-issues:
    - "CRITICAL: SSL certificate expired causing authentication failures"
    - "BREAKING: Required field 'email' removed from user response"
    - "SECURITY: Weak password validation bypassed"
    - "PERFORMANCE: Average response time increased by 400%"

servers:
  - url: http://localhost:4101
    description: Mock server with critical issues

paths:
  /health:
    get:
      summary: Health check endpoint
      description: |
        Returns health status with detailed error information.
        Currently experiencing critical authentication service failures.
      responses:
        "503":
          description: Service unhealthy - critical authentication issues
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
              examples:
                critical_failure:
                  summary: Critical authentication failure
                  value:
                    status: "error"
                    timestamp: "2025-08-29T10:30:00Z"
                    service: "User Authentication API"
                    version: "v1.0.0"
                    error: "SSL certificate expired causing authentication failures"
                    severity: "critical"
                    checks:
                      database: "failed"
                      ldap: "timeout"
                      ssl: "expired"
                      memory: "critical"
                security_issue:
                  summary: Security vulnerability detected
                  value:
                    status: "unhealthy"
                    timestamp: "2025-08-29T10:30:00Z"
                    service: "User Authentication API"
                    version: "v1.0.0"
                    error: "Weak password validation bypassed - security risk"
                    severity: "major"
                    checks:
                      database: "ok"
                      ldap: "degraded"
                      ssl: "ok"
                      security: "compromised"

  /auth/login:
    post:
      summary: User authentication
      description: |
        Authenticate user credentials. Currently experiencing high failure rates
        due to SSL certificate issues and authentication service timeouts.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            example:
              username: "alice"
              password: "securePassword123"
      responses:
        "500":
          description: Internal server error - authentication service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ssl_error:
                  summary: SSL certificate expired
                  value:
                    error: "authentication_failed"
                    message: "SSL certificate expired - cannot validate credentials"
                    code: "SSL_CERT_EXPIRED"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "critical"
                    impact: "All authentication requests failing"
        "503":
          description: Service unavailable - LDAP timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                ldap_timeout:
                  summary: LDAP service timeout
                  value:
                    error: "service_timeout"
                    message: "LDAP authentication service timeout (5000ms)"
                    code: "LDAP_TIMEOUT"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "major"
                    impact: "Authentication requests timing out"
        "429":
          description: Too many requests - rate limiting active
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                rate_limited:
                  summary: Rate limit exceeded due to brute force protection
                  value:
                    error: "rate_limit_exceeded"
                    message: "Too many failed authentication attempts"
                    code: "BRUTE_FORCE_PROTECTION"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "minor"
                    retryAfter: 300

  /users/{userId}:
    get:
      summary: Get user information
      description: |
        Retrieve user details. BREAKING CHANGE: 'email' field removed in v2.
        Response structure will change significantly causing client compatibility issues.
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          example: "user_123"
      responses:
        "200":
          description: User information (deprecated schema)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserV1Deprecated'
              example:
                id: "user_123"
                username: "alice"
                email: "alice@example.com"  # Will be removed in v2
                profile:
                  firstName: "Alice"
                  lastName: "Smith"
                createdAt: "2024-01-15T10:30:00Z"
        "500":
          description: Database connection failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                db_failure:
                  summary: Database connection pool exhausted
                  value:
                    error: "database_error"
                    message: "Database connection pool exhausted - cannot retrieve user data"
                    code: "DB_POOL_EXHAUSTED"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "critical"
                    impact: "All user data requests failing"
        "503":
          description: Service degraded - high response times
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                performance_degraded:
                  summary: Performance severely degraded
                  value:
                    error: "performance_degraded"
                    message: "Database queries taking longer than 5 seconds"
                    code: "QUERY_TIMEOUT"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "major"
                    avgResponseTime: "5200ms"

  /users:
    get:
      summary: List users with critical pagination issues
      description: |
        List users with pagination. Experiencing memory issues and connection failures.
        Response times have increased by 400% due to inefficient queries.
      parameters:
        - in: query
          name: page
          schema: 
            type: integer
            minimum: 1
            default: 1
          description: Page number (queries timing out for page > 10)
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Items per page (memory issues with limit > 50)
      responses:
        "200":
          description: Users list (with performance warnings)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListResponse'
        "500":
          description: Memory allocation failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                memory_error:
                  summary: Memory allocation failure
                  value:
                    error: "out_of_memory"
                    message: "Memory allocation failed - heap size exceeded"
                    code: "HEAP_OVERFLOW"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "critical"
                    memoryUsage: "95%"
        "504":
          description: Gateway timeout - query too slow
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                timeout_error:
                  summary: Database query timeout
                  value:
                    error: "gateway_timeout"
                    message: "Database query exceeded 30 second timeout"
                    code: "QUERY_TIMEOUT"
                    timestamp: "2025-08-29T10:30:00Z"
                    severity: "major"
                    queryDuration: "32000ms"

components:
  schemas:
    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy, error]
          description: Overall health status
        timestamp:
          type: string
          format: date-time
        service:
          type: string
        version:
          type: string
        error:
          type: string
          description: Detailed error message
        severity:
          type: string
          enum: [info, minor, major, critical]
        checks:
          type: object
          description: Individual component health checks
          additionalProperties:
            type: string
        metrics:
          type: object
          description: Performance and operational metrics
        incidents:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              timestamp:
                type: string
                format: date-time
              severity:
                type: string
              description:
                type: string
              resolved:
                type: boolean
      required:
        - status
        - timestamp
        - service
        - version

    LoginRequest:
      type: object
      properties:
        username:
          type: string
          description: Username or email
        password:
          type: string
          description: User password
      required:
        - username
        - password

    UserV1Deprecated:
      type: object
      description: |
        DEPRECATED: This schema will change significantly in v2.
        BREAKING CHANGE: 'email' field will be removed.
        BREAKING CHANGE: 'username' will be renamed to 'handle'.
      properties:
        id:
          type: string
          description: Unique user identifier
        username:
          type: string
          description: "DEPRECATED: Will be renamed to 'handle' in v2"
          deprecated: true
        email:
          type: string
          format: email
          description: "BREAKING: This field will be REMOVED in v2"
          deprecated: true
          x-breaking-change: "Field removed in v2.0"
        profile:
          type: object
          properties:
            firstName:
              type: string
            lastName:
              type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - username
        - email

    UsersListResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserV1Deprecated'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            pages:
              type: integer
        performance:
          type: object
          description: Performance degradation warnings
          properties:
            queryTime:
              type: string
              example: "2.5s (degraded)"
            memoryUsage:
              type: string
              example: "87% (high)"
            warnings:
              type: array
              items:
                type: string
              example:
                - "Query performance degraded"
                - "Memory usage approaching limit"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        code:
          type: string
          description: Internal error code
        timestamp:
          type: string
          format: date-time
        severity:
          type: string
          enum: [info, minor, major, critical]
        impact:
          type: string
          description: Business impact description
        retryAfter:
          type: integer
          description: Seconds to wait before retry (for 429 errors)
        queryDuration:
          type: string
          description: Query execution time (for timeout errors)
        memoryUsage:
          type: string
          description: Memory usage percentage (for memory errors)
        avgResponseTime:
          type: string
          description: Average response time (for performance errors)
      required:
        - error
        - message
        - timestamp
        - severity
