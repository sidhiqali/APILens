openapi: 3.0.3
info:
  title: Inventory API
  version: "1.0.0"
  description: Product inventory management API - Version 1
paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the health status of the Inventory API
      responses:
        "200":
          description: Health status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy, unhealthy, degraded, error]
                  timestamp:
                    type: string
                    format: date-time
                  service:
                    type: string
                  version:
                    type: string
                required:
                  - status
                  - timestamp
                  - service
                  - version
              example:
                status: "healthy"
                timestamp: "2025-08-17T22:45:00Z"
                service: "Inventory API"
                version: "v1.0.0"
  /products:
    get:
      summary: List products
      description: Retrieve a list of all products in inventory
      parameters:
        - in: query
          name: category
          schema: 
            type: string
          description: Filter by product category
          required: false
        - in: query
          name: inStock
          schema: 
            type: boolean
          description: Filter by stock availability
          required: false
      responses:
        "200":
          description: Successfully retrieved products (returns array directly)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: "p1"
                  name: "T-Shirt"
                  price: 19.99
                  category: "clothing"
                  stock: 150
                  sku: "TSH-001"
                - id: "p2"
                  name: "Shoes"
                  price: 59.99
                  category: "footwear"
                  stock: 75
                  sku: "SHO-001"
                - id: "p3"
                  name: "Hat"
                  price: 24.99
                  category: "accessories"
                  stock: 0
                  sku: "HAT-001"
        "400":
          description: Invalid query parameters
          content:
            application/json:
              example:
                error: "invalid_category"
                message: "Category must be a valid string"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          description: Unique product identifier
        name:
          type: string
          description: Product name
        price:
          type: number
          minimum: 0
          description: Product price
        category:
          type: string
          description: Product category
        stock:
          type: integer
          minimum: 0
          description: Available stock quantity
        sku:
          type: string
          description: Stock keeping unit
      required:
        - id
        - name
        - price
        - category
        - stock
        - sku
